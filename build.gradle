plugins {
    id 'idea'
    id 'maven-publish'
    id 'me.modmuss50.mod-publish-plugin' version '0.7.4' apply false
    id 'fabric-loom' version '1.8-SNAPSHOT' apply false
    id 'net.neoforged.moddev' version '2.0.43-beta' apply false
}

def javaVersion = 8

def ENV = System.getenv()
version = mod_version
group = mod_group_id

allprojects {
    tasks.register('buildAndRelease') {
        dependsOn(tasks.build, tasks.publish)
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'
    apply plugin: 'me.modmuss50.mod-publish-plugin'
    project.group = rootProject.group
    project.version = rootProject.version

    repositories {
        maven { url "https://maven.shedaniel.me" }
        exclusiveContent {
            forRepository {
                maven {
                    name = "ParchmentMC"
                    url = "https://maven.parchmentmc.org"
                }
            }
            filter {
                includeGroupAndSubgroups("org.parchmentmc")
            }
        }
        maven {
            url = 'https://repo.spongepowered.org/repository/maven-public'
            content {
                includeGroupAndSubgroups("org.spongepowered")
            }
        }
    }

    dependencies {
        compileOnly "org.jetbrains:annotations:${jetbrains_annotations_version}"
    }

    base {
        archivesName.set("${mod_id}-${project.name}")
    }

    processResources {
        filteringCharset "UTF-8"

        def expandProps = [
                "version"              : project.version,
                "maven_group_id"       : project.mod_group_id,
                "mod_id"               : project.mod_id,
                "mod_display_name"     : project.mod_name,
                "mod_description"      : project.mod_description,
                "sources_url"          : project.sources_url,
                "issues_url"           : project.issues_url,
                "license_url"          : project.license_url,
                "homepage_url"         : project.homepage_url,

                "minecraft_version"    : project.minecraft_version,
                "forge_version"        : project.forge_version,
                "fabric_loader_version": project.fabric_loader_version,
                "java_version"         : "${javaVersion}",
        ]

        filesMatching(['pack.mcmeta', '*.mod.json', 'META-INF/mods.toml', '*.mixins.json']) {
            expand expandProps
        }
        inputs.properties(expandProps)
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(javaVersion)
        }

        withSourcesJar()
//        withJavadocJar()
    }

    javadoc {
        // make javadoc not throw on mixin's '@reason'
        options.tags = ["reason"]
    }

    jar {
        def licenseFile = rootProject.file("LICENSE.txt")
        inputs.file(licenseFile)

        from(licenseFile) {
            rename { "LICENSE_${project.mod_id}.txt" }
        }
    }

    sourcesJar {
        def licenseFile = rootProject.file("LICENSE.txt")
        inputs.file(licenseFile)

        from(licenseFile) {
            rename { "LICENSE_${project.mod_id}.txt" }
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }

    tasks.publishMods.mustRunAfter tasks.publish
    tasks.buildAndRelease.dependsOn(tasks.publishMods)

    publishing {
        publications {
            "mavenJava${project.name}"(MavenPublication) {
                artifactId "${project.mod_id}-${project.name}"
                from components.java

                pom {
                    name = project.mod_name
                    description = project.mod_description
                    url = project.sources_url

                    scm {
                        connection = "git:${project.sources_url}.git"
                        developerConnection = "git:${project.sources_url}.git"
                        url = project.sources_url
                    }

                    licenses {
                        license {
                            name = 'MIT License'
                            url = project.license_url
                        }
                    }

                    developers {
                        developer {
                            id = 'telepathic_grunt'
                            name = 'TelepathicGrunt'
                            email = 'asarnesespam@gmail.com'
                        }
                    }
                }

            }
        }
    }

    publishMods {
        type = BETA

        displayName = "${project.mod_name} v${project.mod_version} (${project.name} ${project.minecraft_version})"
        version = "${project.version}+${project.minecraft_version}-${project.name}"

        def changeLogFile = project.file("CHANGELOG.md")
        changelog = changeLogFile.exists() ? changeLogFile.text : ""
    }
}

tasks.named('wrapper', Wrapper).configure {
    distributionType = Wrapper.DistributionType.BIN
}

// IDEA no longer automatically downloads sources/javadoc jars for dependencies, so we need to explicitly enable the behavior.
idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}

////////////////////////////////////////////RELEASING/////////////////////////////////////////////

publishing {
    repositories {
        if (ENV.MAVEN_USER) {
            maven {
                url = uri("https://nexus.resourcefulbees.com/repository/telepathicgrunt/")
                credentials {
                    username ENV.MAVEN_USER
                    password ENV.MAVEN_PASS
                }
            }
        }
    }
}
